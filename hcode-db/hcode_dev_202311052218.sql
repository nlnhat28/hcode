--
-- Script was generated by Devart dbForge Studio 2022 for MySQL, Version 9.1.21.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 05/11/2023 22:18:01
-- Server version: 8.0.32
-- Client version: 4.1
--

-- 
-- Disable foreign keys
-- 
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

-- 
-- Set SQL mode
-- 
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- 
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

--
-- Set default database
--
USE hcode_dev;

--
-- Drop table `problem_input`
--
DROP TABLE IF EXISTS problem_input;

--
-- Drop table `datatype`
--
DROP TABLE IF EXISTS datatype;

--
-- Drop table `problem_topic`
--
DROP TABLE IF EXISTS problem_topic;

--
-- Drop table `topic`
--
DROP TABLE IF EXISTS topic;

--
-- Drop table `submission`
--
DROP TABLE IF EXISTS submission;

--
-- Drop table `language`
--
DROP TABLE IF EXISTS language;

--
-- Drop table `account_contest_problem`
--
DROP TABLE IF EXISTS account_contest_problem;

--
-- Drop table `contest_account`
--
DROP TABLE IF EXISTS contest_account;

--
-- Drop table `comment`
--
DROP TABLE IF EXISTS comment;

--
-- Drop table `problem_account`
--
DROP TABLE IF EXISTS problem_account;

--
-- Drop procedure `proc_Account_GetByUsername`
--
DROP PROCEDURE IF EXISTS proc_Account_GetByUsername;

--
-- Drop procedure `proc_Account_Login`
--
DROP PROCEDURE IF EXISTS proc_Account_Login;

--
-- Drop view `view_account`
--
DROP VIEW IF EXISTS view_account CASCADE;

--
-- Drop procedure `proc_Account_Insert`
--
DROP PROCEDURE IF EXISTS proc_Account_Insert;

--
-- Drop table `account`
--
DROP TABLE IF EXISTS account;

--
-- Drop procedure `proc_Role_GetAll`
--
DROP PROCEDURE IF EXISTS proc_Role_GetAll;

--
-- Drop procedure `proc_Role_GetByCode`
--
DROP PROCEDURE IF EXISTS proc_Role_GetByCode;

--
-- Drop table `role`
--
DROP TABLE IF EXISTS role;

--
-- Drop table `contest_problem`
--
DROP TABLE IF EXISTS contest_problem;

--
-- Drop table `contest`
--
DROP TABLE IF EXISTS contest;

--
-- Drop table `testcase`
--
DROP TABLE IF EXISTS testcase;

--
-- Drop table `problem`
--
DROP TABLE IF EXISTS problem;

--
-- Set default database
--
USE hcode_dev;

--
-- Create table `problem`
--
CREATE TABLE problem (
  ProblemId char(36) NOT NULL DEFAULT (UUID()),
  ProblemCode varchar(20) NOT NULL,
  ProblemName varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_as_ci NOT NULL,
  Alias varchar(255) NOT NULL,
  Number int NOT NULL,
  Difficulty int NOT NULL DEFAULT 1,
  Content text NOT NULL,
  Hint text DEFAULT NULL,
  Solution text NOT NULL,
  LimitTime int DEFAULT NULL,
  LimitMemory int DEFAULT NULL,
  State int DEFAULT NULL,
  CreatedBy varchar(255) DEFAULT NULL,
  CreatedTime datetime DEFAULT NULL,
  ModifiedBy varchar(255) DEFAULT NULL,
  ModifiedTime datetime DEFAULT NULL,
  PRIMARY KEY (ProblemId)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create index `UK_problem_ProblemCode` on table `problem`
--
ALTER TABLE problem
ADD UNIQUE INDEX UK_problem_ProblemCode (ProblemCode);

--
-- Create index `UK_problem_Alias` on table `problem`
--
ALTER TABLE problem
ADD UNIQUE INDEX UK_problem_Alias (Alias);

--
-- Create index `UK_problem_ProblemName` on table `problem`
--
ALTER TABLE problem
ADD UNIQUE INDEX UK_problem_ProblemName (ProblemName);

--
-- Create index `UK_problem_ProblemId` on table `problem`
--
ALTER TABLE problem
ADD UNIQUE INDEX UK_problem_ProblemId (ProblemId);

--
-- Create index `UK_problem_Number` on table `problem`
--
ALTER TABLE problem
ADD UNIQUE INDEX UK_problem_Number (Number);

--
-- Create table `testcase`
--
CREATE TABLE testcase (
  TestcaseId char(36) NOT NULL DEFAULT (UUID()),
  ProblemId char(36) NOT NULL,
  Input text NOT NULL,
  ExpectedOutput text NOT NULL,
  RowOrder int DEFAULT NULL,
  AllowView tinyint(1) DEFAULT 1,
  IsActivated tinyint(1) DEFAULT 1,
  PRIMARY KEY (TestcaseId)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create index `UK_testcase_TestcaseId` on table `testcase`
--
ALTER TABLE testcase
ADD UNIQUE INDEX UK_testcase_TestcaseId (TestcaseId);

--
-- Create index `IDX_testcase_ProblemId` on table `testcase`
--
ALTER TABLE testcase
ADD INDEX IDX_testcase_ProblemId (ProblemId);

--
-- Create foreign key
--
ALTER TABLE testcase
ADD CONSTRAINT FK_testcase_ProblemId FOREIGN KEY (ProblemId)
REFERENCES problem (ProblemId) ON DELETE CASCADE;

--
-- Create table `contest`
--
CREATE TABLE contest (
  ContestId char(36) NOT NULL DEFAULT (UUID()),
  ContestName varchar(255) NOT NULL,
  ContestCode varchar(20) NOT NULL,
  Alias varchar(255) DEFAULT NULL,
  Password varchar(255) DEFAULT NULL,
  State int DEFAULT NULL,
  StartTime datetime DEFAULT NULL,
  EndTime datetime DEFAULT NULL,
  TimeToDo int DEFAULT NULL,
  CreatedBy varchar(255) DEFAULT NULL,
  CreatedTime datetime DEFAULT NULL,
  ModifiedBy varchar(255) DEFAULT NULL,
  ModifiedTime datetime DEFAULT NULL,
  PRIMARY KEY (ContestId)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create index `UK_contest_ContestId` on table `contest`
--
ALTER TABLE contest
ADD UNIQUE INDEX UK_contest_ContestId (ContestId);

--
-- Create index `UK_contest_ContestName` on table `contest`
--
ALTER TABLE contest
ADD UNIQUE INDEX UK_contest_ContestName (ContestName);

--
-- Create index `UK_contest_ContestCode` on table `contest`
--
ALTER TABLE contest
ADD UNIQUE INDEX UK_contest_ContestCode (ContestCode);

--
-- Create index `UK_contest_Alias` on table `contest`
--
ALTER TABLE contest
ADD UNIQUE INDEX UK_contest_Alias (Alias);

--
-- Create table `contest_problem`
--
CREATE TABLE contest_problem (
  ContestProblemId char(36) NOT NULL DEFAULT (UUID()),
  ContestId char(36) NOT NULL,
  ProblemId char(36) NOT NULL,
  Score int DEFAULT NULL,
  PRIMARY KEY (ContestProblemId)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create index `UK_contest_problem_ContestProblemId` on table `contest_problem`
--
ALTER TABLE contest_problem
ADD UNIQUE INDEX UK_contest_problem_ContestProblemId (ContestProblemId);

--
-- Create index `IDX_contest_problem_ContestId` on table `contest_problem`
--
ALTER TABLE contest_problem
ADD INDEX IDX_contest_problem_ContestId (ContestId);

--
-- Create index `IDX_contest_problem_ProblemId` on table `contest_problem`
--
ALTER TABLE contest_problem
ADD INDEX IDX_contest_problem_ProblemId (ProblemId);

--
-- Create foreign key
--
ALTER TABLE contest_problem
ADD CONSTRAINT FK_contest_problem_ContestId FOREIGN KEY (ContestId)
REFERENCES contest (ContestId) ON DELETE CASCADE;

--
-- Create foreign key
--
ALTER TABLE contest_problem
ADD CONSTRAINT FK_contest_problem_ProblemId FOREIGN KEY (ProblemId)
REFERENCES problem (ProblemId) ON DELETE CASCADE;

--
-- Create table `role`
--
CREATE TABLE role (
  RoleId char(36) NOT NULL DEFAULT (UUID()),
  RoleCode varchar(20) NOT NULL,
  RoleName varchar(255) NOT NULL,
  Description varchar(255) DEFAULT NULL,
  SortOrder int DEFAULT NULL,
  PRIMARY KEY (RoleId)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create index `UK_role_RoleId` on table `role`
--
ALTER TABLE role
ADD UNIQUE INDEX UK_role_RoleId (RoleId);

--
-- Create index `UK_role_RoleCode` on table `role`
--
ALTER TABLE role
ADD UNIQUE INDEX UK_role_RoleCode (RoleCode);

--
-- Create index `UK_role_RoleName` on table `role`
--
ALTER TABLE role
ADD UNIQUE INDEX UK_role_RoleName (RoleName);

DELIMITER $$

--
-- Create procedure `proc_Role_GetByCode`
--
CREATE PROCEDURE proc_Role_GetByCode (IN p_RoleCode varchar(255))
SQL SECURITY INVOKER
BEGIN
  SELECT
    *
  FROM role r
  WHERE r.RoleCode LIKE p_RoleCode;
END
$$

--
-- Create procedure `proc_Role_GetAll`
--
CREATE PROCEDURE proc_Role_GetAll ()
SQL SECURITY INVOKER
BEGIN
  SELECT
    *
  FROM role r
  ORDER BY r.SortOrder;
END
$$

DELIMITER ;

--
-- Create table `account`
--
CREATE TABLE account (
  AccountId char(36) NOT NULL DEFAULT (UUID()),
  Username varchar(50) NOT NULL,
  Password varchar(255) NOT NULL,
  Email varchar(100) NOT NULL,
  Phone varchar(50) DEFAULT NULL,
  FullName varchar(100) DEFAULT NULL,
  Gender int DEFAULT NULL COMMENT '0: Nam; 1: Nữ; 3: Khác',
  Avatar blob DEFAULT NULL,
  DateOfBirth date DEFAULT NULL,
  RoleId char(36) DEFAULT NULL,
  IsVerified tinyint(1) DEFAULT 0,
  CreatedBy varchar(255) DEFAULT NULL,
  CreatedTime datetime DEFAULT NULL,
  ModifiedBy varchar(255) DEFAULT NULL,
  ModifiedTime datetime DEFAULT NULL,
  PRIMARY KEY (AccountId)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create index `UK_account_AccountId` on table `account`
--
ALTER TABLE account
ADD UNIQUE INDEX UK_account_AccountId (AccountId);

--
-- Create index `UK_account_Username` on table `account`
--
ALTER TABLE account
ADD UNIQUE INDEX UK_account_Username (Username);

--
-- Create index `UK_account_Email` on table `account`
--
ALTER TABLE account
ADD UNIQUE INDEX UK_account_Email (Email);

--
-- Create index `IDX_account_Password` on table `account`
--
ALTER TABLE account
ADD INDEX IDX_account_Password (Password);

--
-- Create index `IDX_account_FullName` on table `account`
--
ALTER TABLE account
ADD INDEX IDX_account_FullName (FullName);

--
-- Create index `IDX_account_RoleId` on table `account`
--
ALTER TABLE account
ADD INDEX IDX_account_RoleId (RoleId);

--
-- Create foreign key
--
ALTER TABLE account
ADD CONSTRAINT FK_account_RoleId FOREIGN KEY (RoleId)
REFERENCES role (RoleId);

DELIMITER $$

--
-- Create procedure `proc_Account_Insert`
--
CREATE PROCEDURE proc_Account_Insert (IN p_AccountId char(36),
IN p_Username varchar(50),
IN p_Password varchar(255),
IN p_Email varchar(100),
IN p_Phone varchar(50),
IN p_FullName varchar(100),
IN p_Gender int,
IN p_Avatar blob,
IN p_DateOfBirth date,
IN p_RoleId char(36),
IN p_IsVerified tinyint(1),
IN p_CreatedBy varchar(255),
IN p_CreatedTime datetime,
IN p_ModifiedBy varchar(255),
IN p_ModifiedTime datetime,
OUT p_AccountIdOut char(36))
SQL SECURITY INVOKER
COMMENT 'Thêm mới 1 tài khoản'
BEGIN
  INSERT INTO account (AccountId,
  Username,
  Password,
  Email,
  Phone,
  FullName,
  Gender,
  Avatar,
  DateOfBirth,
  RoleId,
  IsVerified,
  CreatedBy,
  CreatedTime,
  ModifiedBy,
  ModifiedTime)
    VALUES (p_AccountId, p_Username, p_Password, p_Email, p_Phone, p_FullName, p_Gender, p_Avatar, p_DateOfBirth, p_RoleId, p_IsVerified, p_CreatedBy, p_CreatedTime, p_ModifiedBy, p_ModifiedTime);

  SELECT
    p_AccountId INTO p_AccountIdOut;
END
$$

DELIMITER ;

--
-- Create view `view_account`
--
CREATE
DEFINER = 'root'@'localhost'
VIEW view_account
AS
SELECT
  ROW_NUMBER() OVER (
  ORDER BY `a`.`CreatedTime` DESC, `a`.`Username` DESC) AS `RowIndex`,
  `a`.`AccountId` AS `AccountId`,
  `a`.`Username` AS `Username`,
  `a`.`Password` AS `Password`,
  `a`.`Email` AS `Email`,
  `a`.`Phone` AS `Phone`,
  `a`.`FullName` AS `FullName`,
  `a`.`Gender` AS `Gender`,
  `a`.`Avatar` AS `Avatar`,
  `a`.`DateOfBirth` AS `DateOfBirth`,
  `r`.`RoleId` AS `RoleId`,
  `r`.`RoleName` AS `RoleName`,
  `r`.`RoleCode` AS `RoleCode`,
  `a`.`IsVerified` AS `IsVerified`,
  `a`.`CreatedBy` AS `CreatedBy`,
  `a`.`CreatedTime` AS `CreatedTime`,
  `a`.`ModifiedBy` AS `ModifiedBy`,
  `a`.`ModifiedTime` AS `ModifiedTime`
FROM (`account` `a`
  LEFT JOIN `role` `r`
    ON ((`a`.`RoleId` = `r`.`RoleId`)));

DELIMITER $$

--
-- Create procedure `proc_Account_Login`
--
CREATE PROCEDURE proc_Account_Login (IN p_Username varchar(255), IN p_Password varchar(255))
SQL SECURITY INVOKER
BEGIN
  SELECT
    *
  FROM view_account va
  WHERE va.Username = p_Username
  AND va.Password = p_Password;
END
$$

--
-- Create procedure `proc_Account_GetByUsername`
--
CREATE PROCEDURE proc_Account_GetByUsername (IN p_Username varchar(255))
SQL SECURITY INVOKER
BEGIN
  SELECT
    *
  FROM view_account va
  WHERE va.Username LIKE p_Username;
END
$$

DELIMITER ;

--
-- Create table `problem_account`
--
CREATE TABLE problem_account (
  ProblemAccountId char(36) NOT NULL DEFAULT 'uuid',
  ProblemId char(36) NOT NULL,
  AccountId char(36) NOT NULL,
  Rate int DEFAULT NULL,
  State int DEFAULT NULL,
  PRIMARY KEY (ProblemAccountId)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create index `UK_problem_account_ProblemAccountId` on table `problem_account`
--
ALTER TABLE problem_account
ADD UNIQUE INDEX UK_problem_account_ProblemAccountId (ProblemAccountId);

--
-- Create index `IDX_problem_account_ProblemId` on table `problem_account`
--
ALTER TABLE problem_account
ADD INDEX IDX_problem_account_ProblemId (ProblemId);

--
-- Create index `IDX_problem_account_AccountId` on table `problem_account`
--
ALTER TABLE problem_account
ADD INDEX IDX_problem_account_AccountId (AccountId);

--
-- Create foreign key
--
ALTER TABLE problem_account
ADD CONSTRAINT FK_problem_account_AccountId FOREIGN KEY (AccountId)
REFERENCES account (AccountId) ON DELETE CASCADE;

--
-- Create foreign key
--
ALTER TABLE problem_account
ADD CONSTRAINT FK_problem_account_ProblemId FOREIGN KEY (ProblemId)
REFERENCES problem (ProblemId) ON DELETE CASCADE;

--
-- Create table `comment`
--
CREATE TABLE comment (
  CommentId char(36) NOT NULL DEFAULT (UUID()),
  ProblemAccountId char(36) NOT NULL,
  Content text NOT NULL,
  CreatedTime datetime DEFAULT NULL,
  ModifiedTime datetime DEFAULT NULL,
  PRIMARY KEY (CommentId)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create index `UK_comment_CommentId` on table `comment`
--
ALTER TABLE comment
ADD UNIQUE INDEX UK_comment_CommentId (CommentId);

--
-- Create index `IDX_comment_ProblemAccountId` on table `comment`
--
ALTER TABLE comment
ADD INDEX IDX_comment_ProblemAccountId (ProblemAccountId);

--
-- Create foreign key
--
ALTER TABLE comment
ADD CONSTRAINT FK_comment_ProblemAccountId FOREIGN KEY (ProblemAccountId)
REFERENCES problem_account (ProblemAccountId) ON DELETE CASCADE;

--
-- Create table `contest_account`
--
CREATE TABLE contest_account (
  ContestAccountId char(36) NOT NULL DEFAULT (UUID()),
  ContestId char(36) NOT NULL,
  AccountId char(36) NOT NULL,
  State int DEFAULT NULL,
  UsedTime int DEFAULT NULL,
  PRIMARY KEY (ContestAccountId)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create index `UK_ContestAccount_ContestAccountId` on table `contest_account`
--
ALTER TABLE contest_account
ADD UNIQUE INDEX UK_ContestAccount_ContestAccountId (ContestAccountId);

--
-- Create index `IDX_ContestAccount_ContestId` on table `contest_account`
--
ALTER TABLE contest_account
ADD INDEX IDX_ContestAccount_ContestId (ContestId);

--
-- Create index `IDX_ContestAccount_AccountId` on table `contest_account`
--
ALTER TABLE contest_account
ADD INDEX IDX_ContestAccount_AccountId (AccountId);

--
-- Create foreign key
--
ALTER TABLE contest_account
ADD CONSTRAINT FK_ContestAccount_AccountId FOREIGN KEY (AccountId)
REFERENCES account (AccountId);

--
-- Create foreign key
--
ALTER TABLE contest_account
ADD CONSTRAINT FK_ContestAccount_ContestId FOREIGN KEY (ContestId)
REFERENCES contest (ContestId);

--
-- Create table `account_contest_problem`
--
CREATE TABLE account_contest_problem (
  AccountContestProblemId char(36) NOT NULL DEFAULT (UUID()),
  AccountId char(36) NOT NULL,
  ContestProblemId char(36) NOT NULL,
  PRIMARY KEY (AccountContestProblemId)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create index `UK_account_contest_problem_AccountContestProblemId` on table `account_contest_problem`
--
ALTER TABLE account_contest_problem
ADD UNIQUE INDEX UK_account_contest_problem_AccountContestProblemId (AccountContestProblemId);

--
-- Create foreign key
--
ALTER TABLE account_contest_problem
ADD CONSTRAINT FK_account_contest_problem_AccountId FOREIGN KEY (AccountId)
REFERENCES account (AccountId) ON DELETE CASCADE;

--
-- Create foreign key
--
ALTER TABLE account_contest_problem
ADD CONSTRAINT FK_account_contest_problem_ContestProblemId FOREIGN KEY (ContestProblemId)
REFERENCES contest_problem (ContestProblemId) ON DELETE CASCADE;

--
-- Create table `language`
--
CREATE TABLE language (
  LanguageId char(36) NOT NULL DEFAULT (UUID()),
  LanguageName varchar(255) NOT NULL,
  Id int NOT NULL,
  Description varchar(255) DEFAULT NULL,
  IsActivated tinyint(1) DEFAULT 1,
  PRIMARY KEY (LanguageId)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create index `UK_language_LanguageName` on table `language`
--
ALTER TABLE language
ADD UNIQUE INDEX UK_language_LanguageName (LanguageName);

--
-- Create index `UK_language_Id` on table `language`
--
ALTER TABLE language
ADD UNIQUE INDEX UK_language_Id (Id);

--
-- Create index `UK_language_LanguageId` on table `language`
--
ALTER TABLE language
ADD UNIQUE INDEX UK_language_LanguageId (LanguageId);

--
-- Create table `submission`
--
CREATE TABLE submission (
  SubmissionId char(36) NOT NULL DEFAULT 'uuid',
  ParentId char(36) NOT NULL,
  SourceCode text NOT NULL,
  LanguageId char(36) NOT NULL,
  RunTime int DEFAULT NULL,
  Memory int DEFAULT NULL,
  Result int DEFAULT NULL,
  PassedCount int DEFAULT NULL,
  FailedCount int DEFAULT NULL,
  CreatedTime datetime DEFAULT NULL,
  PRIMARY KEY (SubmissionId)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create index `UK_submission_SubmissionId` on table `submission`
--
ALTER TABLE submission
ADD UNIQUE INDEX UK_submission_SubmissionId (SubmissionId);

--
-- Create index `IDX_submission_ParentId` on table `submission`
--
ALTER TABLE submission
ADD INDEX IDX_submission_ParentId (ParentId);

--
-- Create index `IDX_submission_LanguageId` on table `submission`
--
ALTER TABLE submission
ADD INDEX IDX_submission_LanguageId (LanguageId);

--
-- Create foreign key
--
ALTER TABLE submission
ADD CONSTRAINT FK_submission_LanguageId FOREIGN KEY (LanguageId)
REFERENCES language (LanguageId);

--
-- Create foreign key
--
ALTER TABLE submission
ADD CONSTRAINT FK_submission_ParentId FOREIGN KEY (ParentId)
REFERENCES account_contest_problem (AccountContestProblemId) ON DELETE CASCADE;

--
-- Create foreign key
--
ALTER TABLE submission
ADD CONSTRAINT FK_submission_ParentId2 FOREIGN KEY (ParentId)
REFERENCES problem_account (ProblemAccountId);

--
-- Create table `topic`
--
CREATE TABLE topic (
  TopicId char(36) NOT NULL DEFAULT (UUID()),
  TopicName varchar(255) NOT NULL,
  Description varchar(255) DEFAULT NULL,
  PRIMARY KEY (TopicId)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create index `UK_topic_TopicName` on table `topic`
--
ALTER TABLE topic
ADD UNIQUE INDEX UK_topic_TopicName (TopicName);

--
-- Create index `UK_topic_TopicId` on table `topic`
--
ALTER TABLE topic
ADD UNIQUE INDEX UK_topic_TopicId (TopicId);

--
-- Create table `problem_topic`
--
CREATE TABLE problem_topic (
  ProblemTopicId char(36) NOT NULL DEFAULT (UUID()),
  ProblemId char(36) NOT NULL,
  TopicId char(36) NOT NULL,
  PRIMARY KEY (ProblemTopicId)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create index `UK_problem_topic_ProblemTopicId` on table `problem_topic`
--
ALTER TABLE problem_topic
ADD UNIQUE INDEX UK_problem_topic_ProblemTopicId (ProblemTopicId);

--
-- Create index `IDX_problem_topic_ProblemId` on table `problem_topic`
--
ALTER TABLE problem_topic
ADD INDEX IDX_problem_topic_ProblemId (ProblemId);

--
-- Create index `IDX_problem_topic_TopicId` on table `problem_topic`
--
ALTER TABLE problem_topic
ADD INDEX IDX_problem_topic_TopicId (TopicId);

--
-- Create foreign key
--
ALTER TABLE problem_topic
ADD CONSTRAINT FK_problem_topic_ProblemId FOREIGN KEY (ProblemId)
REFERENCES problem (ProblemId) ON DELETE CASCADE;

--
-- Create foreign key
--
ALTER TABLE problem_topic
ADD CONSTRAINT FK_problem_topic_TopicId FOREIGN KEY (TopicId)
REFERENCES topic (TopicId) ON DELETE CASCADE;

--
-- Create table `datatype`
--
CREATE TABLE datatype (
  DatatypeId char(36) NOT NULL DEFAULT 'uuid',
  DatatypeName varchar(255) NOT NULL,
  Description varchar(255) DEFAULT NULL,
  PRIMARY KEY (DatatypeId)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create index `UK_datatype_DatatypeId` on table `datatype`
--
ALTER TABLE datatype
ADD UNIQUE INDEX UK_datatype_DatatypeId (DatatypeId);

--
-- Create index `UK_datatype_DatatypeName` on table `datatype`
--
ALTER TABLE datatype
ADD UNIQUE INDEX UK_datatype_DatatypeName (DatatypeName);

--
-- Create table `problem_input`
--
CREATE TABLE problem_input (
  ProblemInputId char(36) NOT NULL DEFAULT (UUID()),
  ProblemId char(36) NOT NULL,
  DatatypeId char(36) NOT NULL,
  `Order` int NOT NULL,
  PRIMARY KEY (ProblemInputId)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci;

--
-- Create index `UK_problem_input_ProblemInputId` on table `problem_input`
--
ALTER TABLE problem_input
ADD UNIQUE INDEX UK_problem_input_ProblemInputId (ProblemInputId);

--
-- Create index `IDX_problem_input_ProblemId` on table `problem_input`
--
ALTER TABLE problem_input
ADD INDEX IDX_problem_input_ProblemId (ProblemId);

--
-- Create index `IDX_problem_input_DatatypeId` on table `problem_input`
--
ALTER TABLE problem_input
ADD INDEX IDX_problem_input_DatatypeId (DatatypeId);

--
-- Create foreign key
--
ALTER TABLE problem_input
ADD CONSTRAINT FK_problem_input_DatatypeId FOREIGN KEY (DatatypeId)
REFERENCES datatype (DatatypeId) ON DELETE CASCADE;

--
-- Create foreign key
--
ALTER TABLE problem_input
ADD CONSTRAINT FK_problem_input_ProblemId FOREIGN KEY (ProblemId)
REFERENCES problem (ProblemId) ON DELETE CASCADE;

-- 
-- Dumping data for table problem
--
-- Table hcode_dev.problem does not contain any data (it is empty)

-- 
-- Dumping data for table contest
--
-- Table hcode_dev.contest does not contain any data (it is empty)

-- 
-- Dumping data for table role
--
INSERT INTO role VALUES
('331a96bf-139a-47a4-635f-4db9ab45a18c', 'Admin', 'Quản trị viên', 'Có tất cả các quyền trên hệ thống', 1),
('48cf7b00-3fee-40c7-4451-59dcbd91f22d', 'Cencor', 'Kiểm duyệt viên', 'Có các quyền liên quan đến kiểm duyệt', 2),
('676a0b19-3adf-6877-3c32-1fe60697734c', 'User', 'Người dùng', 'Chỉ có quyền sử dụng các chức năng cơ bản của hệ thống', 3);

-- 
-- Dumping data for table contest_problem
--
-- Table hcode_dev.contest_problem does not contain any data (it is empty)

-- 
-- Dumping data for table account
--
-- Table hcode_dev.account does not contain any data (it is empty)

-- 
-- Dumping data for table language
--
-- Table hcode_dev.language does not contain any data (it is empty)

-- 
-- Dumping data for table account_contest_problem
--
-- Table hcode_dev.account_contest_problem does not contain any data (it is empty)

-- 
-- Dumping data for table topic
--
-- Table hcode_dev.topic does not contain any data (it is empty)

-- 
-- Dumping data for table datatype
--
-- Table hcode_dev.datatype does not contain any data (it is empty)

-- 
-- Dumping data for table problem_account
--
-- Table hcode_dev.problem_account does not contain any data (it is empty)

-- 
-- Dumping data for table testcase
--
-- Table hcode_dev.testcase does not contain any data (it is empty)

-- 
-- Dumping data for table submission
--
-- Table hcode_dev.submission does not contain any data (it is empty)

-- 
-- Dumping data for table problem_topic
--
-- Table hcode_dev.problem_topic does not contain any data (it is empty)

-- 
-- Dumping data for table problem_input
--
-- Table hcode_dev.problem_input does not contain any data (it is empty)

-- 
-- Dumping data for table contest_account
--
-- Table hcode_dev.contest_account does not contain any data (it is empty)

-- 
-- Dumping data for table comment
--
-- Table hcode_dev.comment does not contain any data (it is empty)

-- 
-- Restore previous SQL mode
-- 
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

-- 
-- Enable foreign keys
-- 
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;